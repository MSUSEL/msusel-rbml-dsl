#
# The MIT License (MIT)
#
# MSUSEL RBML DSL
# Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
# Software Engineering Laboratory and Idaho State University, Informatics and
# Computer Science, Empirical Software Engineering Laboratory
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

SPS:
  name: Decorator
  roles:
    - GenHierarchy:
        name: Component
        Classifier:
          name: Component
          mult: 1..1
          features:
            b1:
              name: Operation()
              type: void
              params: []
              mult: 1..*
        children:
          - Class:
              name: ConcreteComponent
              mult: 1..*
          - Classifier:
              name: AbstractComponent
              mult: "*"
    - GenHierarchy:
        name: Decorator
        Classifier:
          name: Decorator
          mult: 1..1
          features:
            b1:
              name: Operation()
              params: []
              mult: 1..*
        children:
          - Class:
              name: AbstractDecorator
              mult: 1..*
          - Classifier:
              name: ConcreteDecorator
              mult: "*"
              features:
                s1:
                  name: addedState
                  type: State
                  mult: "*"
                b1:
                  name: AddedBehavior()
                  type: void
                  params: []
                  mult: "*"
  relations:
    - Association:
        name: Comp
        mult: 1..*
        source:
          name: absComp
          type: Component@Component
          mult: 1..*
        dest:
          name: absDec
          type: Decorator@Decorator
          mult: 1..1
    - Generalization:
        name: CompDecGen
        child: Decorator@Decorator
        parent: Component@Component
        atLeastOne: group1
    - Realization:
        name: CompDecReal
        child: Decorator@Decorator
        parent: Component@Component
        atLeastOne: group1
